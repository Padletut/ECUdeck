generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or use "mysql" or "sqlite" depending on your setup
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(cuid())
  email      String    @unique
  name       String?
  role       Role      @default(USER)
  sessions   Session[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Session {
  id           String    @id @default(cuid())
  user         User      @relation(fields: [userId], references: [id])
  userId       String
  vehicle      Vehicle?
  maps         Map[]
  chatLogs     ChatLog[]
  startedAt    DateTime  @default(now())
  endedAt      DateTime?
}

model Vehicle {
  id          String    @id @default(cuid())
  vin         String    @unique
  make        String
  model       String
  engineCode  String
  year        Int
  sessions    Session[]
}

model Map {
  id          String    @id @default(cuid())
  session     Session   @relation(fields: [sessionId], references: [id])
  sessionId   String
  type        MapType
  filePath    String
  version     String?
  uploadedAt  DateTime  @default(now())
}

model ChatLog {
  id         String    @id @default(cuid())
  session    Session   @relation(fields: [sessionId], references: [id])
  sessionId  String
  sender     String    // "user", "assistant", "system"
  content    String
  createdAt  DateTime  @default(now())
}

enum Role {
  USER
  ADMIN
}

enum MapType {
  ORIGINAL
  MODIFIED
  COMPARE
}
